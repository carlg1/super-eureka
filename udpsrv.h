#pragma once

/////////////////////////////////////////////////////////////////////////////////
// #includes
/////////////////////////////////////////////////////////////////////////////////
#include <string>
#include <stdint.h>

#include "epoller.h"


/////////////////////////////////////////////////////////////////////////////////
// namespaces
/////////////////////////////////////////////////////////////////////////////////
using namespace std;


/////////////////////////////////////////////////////////////////////////////////
// Class Defintion
/////////////////////////////////////////////////////////////////////////////////
class UDPServer
{
public:
	UDPServer() = delete;
	UDPServer(const uint16_t _port, const char *const _bindaddr = nullptr);
	~UDPServer();

	bool StartServer(EPoller *ep);
	bool StopServer();
	bool GetData();

	static bool ValidateIP(const char *const addr);

private:
	int srvfd;
	string bindaddr;
	uint16_t port;
	epoller_cb_t epcb;

	static bool udpsrv_epoller_cb(void *obj, int events) {return ((UDPServer *) obj)->GetData();};
};
